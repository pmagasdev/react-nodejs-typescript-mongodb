name: Deploy Backend Docker Image ECR - CI

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - master
    paths:
      - 'server/**'
      - k8s/server-deployment.yml
      - k8s/server-cluster-ip-service.yml

env:
  AWS_ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
  AWS_ECR_REPOSITORY: exampleapp-backend
  K8S_NAMESPACE: ${{ vars.K8S_NAMESPACE }}
  SHA: ${{ github.sha }}

jobs:
  build-backend-docker-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ env.SHA }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      uses: docker/build-push-action@v2
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      with:
        context: ./server
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: |
          ${{env.AWS_ECR_REGISTRY}}/${{env.AWS_ECR_REPOSITORY}}:latest
          ${{env.AWS_ECR_REGISTRY}}/${{env.AWS_ECR_REPOSITORY}}:${{env.SHA}}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{env.AWS_ECR_REGISTRY}}/${{env.AWS_ECR_REPOSITORY}}:${{env.SHA}}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'HIGH,CRITICAL'

    - name: Restart the deployment
